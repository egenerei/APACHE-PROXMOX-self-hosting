# Redirect HTTP to HTTPS
<VirtualHost *:80>
    ServerName egenerei.es
    ServerAlias www.egenerei.es

    # Handle /server-status without redirecting to HTTPS
    <Location /server-status>
        # Enables server-status page for monitoring
        SetHandler server-status           
    </Location>

    # Redirect all other HTTP traffic to HTTPS (except /server-status)
    RewriteEngine On
    # Excludes /server-status from redirection
    RewriteCond %{REQUEST_URI} !^/server-status
    # Redirects to HTTPS with a permanent 301 redirect
    RewriteRule ^ https://egenerei.es%{REQUEST_URI} [L,R=301]  

    # Custom 404 error page
    ErrorDocument 404 /errors/404.html  
</VirtualHost>

# HTTPS Configuration
<VirtualHost *:443>
    ServerName egenerei.es
    ServerAlias www.egenerei.es
    # Root directory for the website
    DocumentRoot /var/www/html

    # SSL Configuration (certificate, key, and chain files)
    SSLEngine on
    # SSL certificate file
    SSLCertificateFile /https_certificates/egenerei.es_ssl_certificate.cer
    # SSL private key file
    SSLCertificateKeyFile /https_certificates/_.egenerei.es_private_key.key
    # Custom 404 error page
    ErrorDocument 404 /errors/404.html

    # Directory settings for the website's document root
    <Directory /var/www/html>
        # Enables symlink following and disables directory listing
        Options +FollowSymLinks -Indexes
        # Prevents .htaccess from overriding server config
        AllowOverride None
        # Grants access to everyone  
        Require all granted
    </Directory>

    # Force "logo.png" to be served as binary data (for download)
    <Files "logo.png">
        ForceType application/octet-stream
    </Files>

    # Admin directory with password protection
    <Directory /var/www/html/admin>
        # Prevents .htaccess from overriding settings
        AllowOverride None
        # Basic authentication
        AuthType Basic
        # Authentication prompt message
        AuthName "Restricted Area"
        # Path to password file
        AuthUserFile /etc/apache2/admin/.htpasswd  
        # Requires a valid user from the .htpasswd file
        Require valid-user
        # Sets default file to admin.html
        DirectoryIndex admin.html
        # Allows symlink following and disables directory listing
        Options +FollowSymLinks -Indexes
    </Directory>

    # URL shortener admin directory
    <Directory /var/www/html/php_url_shortener>
        # Allows symlink following
        Options +FollowSymLinks
        # Allows .htaccess overrides
        AllowOverride All
        # Grants access to everyone
        Require all granted
        # Sets default file to admin.php
        DirectoryIndex admin.php
    </Directory>

    # Rewriting rule to redirect all requests for /php_url_shortener to index.php
    RewriteEngine On
    # Redirects all requests to index.php
    RewriteRule ^/php_url_shortener(.*)$ /php_url_shortener/index.php [L,QSA]

    # Logging configurations
    # Path to error log
    ErrorLog ${APACHE_LOG_DIR}/egenerei.es_error.log
    # Path to access log
    CustomLog ${APACHE_LOG_DIR}/egenerei.es_access.log combined
</VirtualHost>

# Redirect HTTP to HTTPS for the Grafana subdomain
<VirtualHost *:80>
    ServerName grafana.egenerei.es

    RewriteEngine On
    # Excludes /status from redirection
    RewriteCond %{REQUEST_URI} !^/status
    # Redirects to HTTPS with a permanent 301 redirect
    RewriteRule ^ https://grafana.egenerei.es%{REQUEST_URI} [L,R=301]

    # Logging configurations for Grafana
    # Path to error log
    ErrorLog ${APACHE_LOG_DIR}/grafana.egenerei.es_error.log
    # Path to access log
    CustomLog ${APACHE_LOG_DIR}/grafana.egenerei.es_access.log combined
</VirtualHost>

# HTTPS Configuration for Grafana subdomain
<VirtualHost *:443>
    ServerName grafana.egenerei.es

    # SSL Configuration (certificate, key, and chain files)
    SSLEngine on
    # SSL certificate file
    SSLCertificateFile /https_certificates/egenerei.es_ssl_certificate.cer
    # SSL private key file
    SSLCertificateKeyFile /https_certificates/_.egenerei.es_private_key.key

    # Reverse proxy configuration for Grafana
    # Preserves the original host header for backend server
    ProxyPreserveHost On
    # Forwards requests to the local Grafana server
    ProxyPass / http://localhost:3000/
    # Handles reverse proxy responses
    ProxyPassReverse / http://localhost:3000/

    # Logging configurations for Grafana
    # Path to error log
    ErrorLog ${APACHE_LOG_DIR}/grafana.egenerei.es_error.log
    # Path to access log
    CustomLog ${APACHE_LOG_DIR}/grafana.egenerei.es_access.log combined
</VirtualHost>
