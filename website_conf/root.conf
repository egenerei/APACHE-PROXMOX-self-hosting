# Redirect HTTP to HTTPS
<VirtualHost *:80>
    ServerName egenerei.es
    ServerAlias www.egenerei.es

    # Handle /server-status without redirecting to HTTPS
    <Location /server-status>
        SetHandler server-status           # Enables server-status page for monitoring
        Require local                      # Restricts access to localhost only
    </Location>

    # Redirect all other HTTP traffic to HTTPS (except /server-status)
    RewriteEngine On
    RewriteCond %{REQUEST_URI} !^/server-status   # Excludes /server-status from redirection
    RewriteRule ^ https://egenerei.es%{REQUEST_URI} [L,R=301]  # Redirects to HTTPS with a permanent 301 redirect

    ErrorDocument 404 /errors/404.html  # Custom 404 error page
</VirtualHost>

# HTTPS Configuration
<VirtualHost *:443>
    ServerName egenerei.es
    ServerAlias www.egenerei.es
    DocumentRoot /var/www/html  # Root directory for the website

    # SSL Configuration (certificate, key, and chain files)
    SSLEngine on
    SSLCertificateFile /https_certificates/egenerei.es_ssl_certificate.cer  # SSL certificate file
    SSLCertificateKeyFile /https_certificates/_.egenerei.es_private_key.key  # SSL private key file

    ErrorDocument 404 /errors/404.html  # Custom 404 error page

    # Directory settings for the website's document root
    <Directory /var/www/html>
        Options +FollowSymLinks -Indexes  # Enables symlink following and disables directory listing
        AllowOverride None  # Prevents .htaccess from overriding server config
        Require all granted  # Grants access to everyone
    </Directory>

    # Force "logo.png" to be served as binary data (for download)
    <Files "logo.png">
        ForceType application/octet-stream
    </Files>

    # Admin directory with password protection
    <Directory /var/www/html/admin>
        AllowOverride None  # Prevents .htaccess from overriding settings
        AuthType Basic  # Basic authentication
        AuthName "Restricted Area"  # Authentication prompt message
        AuthUserFile /etc/apache2/admin/.htpasswd  # Path to password file
        Require valid-user  # Requires a valid user from the .htpasswd file
        DirectoryIndex admin.html  # Sets default file to admin.html
        Options +FollowSymLinks -Indexes  # Allows symlink following and disables directory listing
    </Directory>

    # URL shortener admin directory
    <Directory /var/www/html/php_url_shortener>
        Options +FollowSymLinks  # Allows symlink following
        AllowOverride All  # Allows .htaccess overrides
        Require all granted  # Grants access to everyone
        DirectoryIndex admin.php  # Sets default file to admin.php
    </Directory>

    # Rewriting rule to redirect all requests for /php_url_shortener to index.php
    RewriteEngine On
    RewriteRule ^/php_url_shortener(.*)$ /php_url_shortener/index.php [L,QSA]  # Redirects all requests to index.php

    # Logging configurations
    ErrorLog ${APACHE_LOG_DIR}/egenerei.es_error.log  # Path to error log
    CustomLog ${APACHE_LOG_DIR}/egenerei.es_access.log combined  # Path to access log
</VirtualHost>

# Redirect HTTP to HTTPS for the Grafana subdomain
<VirtualHost *:80>
    ServerName grafana.egenerei.es

    RewriteEngine On
    RewriteCond %{REQUEST_URI} !^/status  # Excludes /status from redirection
    RewriteRule ^ https://grafana.egenerei.es%{REQUEST_URI} [L,R=301]  # Redirects to HTTPS with a permanent 301 redirect

    # Logging configurations for Grafana
    ErrorLog ${APACHE_LOG_DIR}/grafana.egenerei.es_error.log  # Path to error log
    CustomLog ${APACHE_LOG_DIR}/grafana.egenerei.es_access.log combined  # Path to access log
</VirtualHost>

# HTTPS Configuration for Grafana subdomain
<VirtualHost *:443>
    ServerName grafana.egenerei.es

    # SSL Configuration (certificate, key, and chain files)
    SSLEngine on
    SSLCertificateFile /https_certificates/egenerei.es_ssl_certificate.cer  # SSL certificate file
    SSLCertificateKeyFile /https_certificates/_.egenerei.es_private_key.key  # SSL private key file

    # Reverse proxy configuration for Grafana
    ProxyPreserveHost On  # Preserves the original host header for backend server
    ProxyPass / http://localhost:3000/  # Forwards requests to the local Grafana server
    ProxyPassReverse / http://localhost:3000/  # Handles reverse proxy responses

    # Logging configurations for Grafana
    ErrorLog ${APACHE_LOG_DIR}/grafana.egenerei.es_error.log  # Path to error log
    CustomLog ${APACHE_LOG_DIR}/grafana.egenerei.es_access.log combined  # Path to access log
</VirtualHost>
